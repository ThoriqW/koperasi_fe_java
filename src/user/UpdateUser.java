/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package user;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import fungsi.WarnaTable;
import fungsi.koneksi;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import static java.awt.image.ImageObserver.WIDTH;
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.prefs.Preferences;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestClientException;
import org.springframework.web.client.RestTemplate;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author Lenovo
 */
public class UpdateUser extends javax.swing.JDialog {
    private final DefaultTableModel tabMode;
    private String iduser = "";
    /**
     * Creates new form Anggota
     * @param parent
     * @param modal
     */
    public UpdateUser(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        this.setLocation(8,1);
        setSize(885,674);
        
        Object[] row={"ID","Username","Role","Nama Lengkap","NIK","Email","No.HP","Alamat","Tanggal Lahir","J.K","Agama"};
        tabMode=new DefaultTableModel(null,row){
              @Override public boolean isCellEditable(int rowIndex, int colIndex){return false;}
        };
        tbUnitKerja.setModel(tabMode);
        //tbPenyakit.setDefaultRenderer(Object.class, new WarnaTable(panelJudul.getBackground(),tbPenyakit.getBackground()));
        tbUnitKerja.setPreferredScrollableViewportSize(new Dimension(800,800));
        tbUnitKerja.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (int i = 0; i < 11; i++) {
            TableColumn column = tbUnitKerja.getColumnModel().getColumn(i);
            switch (i) {
                case 0 -> {
                    column.setMinWidth(0);
                    column.setMaxWidth(0);
                    column.setWidth(0);
                    column.setPreferredWidth(0);
                }
                case 1 -> column.setPreferredWidth(110);
                case 2 -> column.setPreferredWidth(80);
                case 3 -> column.setPreferredWidth(150);
                case 4 -> column.setPreferredWidth(110);
                case 5 -> column.setPreferredWidth(150);
                case 6 -> column.setPreferredWidth(110);
                case 7 -> column.setPreferredWidth(150);
                case 8 -> column.setPreferredWidth(130);
                case 9 -> column.setPreferredWidth(80);
                case 10 -> column.setPreferredWidth(80);
                case 11 -> column.setPreferredWidth(80);
            }
        }
        
        ChkInput.setSelected(true);
        tbUnitKerja.setDefaultRenderer(Object.class, new WarnaTable());
        isForm(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        internalFrame1 = new widget.InternalFrame();
        Scroll = new widget.ScrollPane();
        tbUnitKerja = new widget.Table();
        jPanel3 = new javax.swing.JPanel();
        panelGlass8 = new widget.panelisi();
        BtnEdit = new widget.Button();
        BtnBatal = new widget.Button();
        BtnPrint = new widget.Button();
        BtnAll = new widget.Button();
        jLabel10 = new widget.Label();
        LCount = new widget.Label();
        BtnKeluar = new widget.Button();
        panelGlass9 = new widget.panelisi();
        jLabel6 = new widget.Label();
        TCari = new javax.swing.JTextField();
        BtnCari = new widget.Button();
        PanelInput = new javax.swing.JPanel();
        FormInput = new widget.PanelBiasa();
        jUsername = new javax.swing.JLabel();
        jAgama = new javax.swing.JLabel();
        TEmail = new javax.swing.JTextField();
        TAlamat = new javax.swing.JTextField();
        TNamaLengkap = new javax.swing.JTextField();
        jPassword = new javax.swing.JLabel();
        jNamaLengkap = new javax.swing.JLabel();
        jNik = new javax.swing.JLabel();
        jEmail = new javax.swing.JLabel();
        jTanggalLahir = new javax.swing.JLabel();
        jNoHp = new javax.swing.JLabel();
        TNik = new javax.swing.JTextField();
        jJK = new javax.swing.JLabel();
        jAlamat = new javax.swing.JLabel();
        TUsername = new javax.swing.JTextField();
        TPassword = new javax.swing.JTextField();
        TNoHp = new javax.swing.JTextField();
        TAgama = new javax.swing.JTextField();
        tanggalLahir = new widget.Tanggal();
        CmbJk = new javax.swing.JComboBox<>();
        ChkInput = new widget.CekBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(611, 155));
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), "::[ Update User ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50, 50, 50))); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        Scroll.setOpaque(true);

        tbUnitKerja.setAutoCreateRowSorter(true);
        tbUnitKerja.setToolTipText("Silahkan klik untuk memilih data yang mau diedit ataupun dihapus");
        tbUnitKerja.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbUnitKerjaMouseClicked(evt);
            }
        });
        tbUnitKerja.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbUnitKerjaKeyReleased(evt);
            }
        });
        Scroll.setViewportView(tbUnitKerja);

        internalFrame1.add(Scroll, java.awt.BorderLayout.CENTER);

        jPanel3.setOpaque(false);
        jPanel3.setPreferredSize(new java.awt.Dimension(44, 100));
        jPanel3.setLayout(new java.awt.BorderLayout(1, 1));

        panelGlass8.setPreferredSize(new java.awt.Dimension(44, 44));
        panelGlass8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        BtnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/inventaris.png"))); // NOI18N
        BtnEdit.setMnemonic('G');
        BtnEdit.setText("Ganti");
        BtnEdit.setToolTipText("Alt+G");
        BtnEdit.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditActionPerformed(evt);
            }
        });
        BtnEdit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnEditKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnEdit);

        BtnBatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Cancel-2-16x16.png"))); // NOI18N
        BtnBatal.setMnemonic('B');
        BtnBatal.setText("Baru");
        BtnBatal.setToolTipText("Alt+B");
        BtnBatal.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBatalActionPerformed(evt);
            }
        });
        BtnBatal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnBatalKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnBatal);

        BtnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/b_print.png"))); // NOI18N
        BtnPrint.setMnemonic('T');
        BtnPrint.setText("Cetak");
        BtnPrint.setToolTipText("Alt+T");
        BtnPrint.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPrintActionPerformed(evt);
            }
        });
        BtnPrint.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnPrintKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnPrint);

        BtnAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Search-16x16.png"))); // NOI18N
        BtnAll.setMnemonic('M');
        BtnAll.setText("Semua");
        BtnAll.setToolTipText("Alt+M");
        BtnAll.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAllActionPerformed(evt);
            }
        });
        BtnAll.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnAllKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnAll);

        jLabel10.setText("Record :");
        jLabel10.setPreferredSize(new java.awt.Dimension(70, 30));
        panelGlass8.add(jLabel10);

        LCount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LCount.setText("0");
        LCount.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        LCount.setPreferredSize(new java.awt.Dimension(72, 30));
        panelGlass8.add(LCount);

        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnKeluar);

        jPanel3.add(panelGlass8, java.awt.BorderLayout.CENTER);

        panelGlass9.setPreferredSize(new java.awt.Dimension(44, 44));
        panelGlass9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 10));

        jLabel6.setText("Key Word :");
        jLabel6.setPreferredSize(new java.awt.Dimension(70, 23));
        panelGlass9.add(jLabel6);

        TCari.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        TCari.setPreferredSize(new java.awt.Dimension(240, 23));
        panelGlass9.add(TCari);

        BtnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        BtnCari.setMnemonic('2');
        BtnCari.setToolTipText("Alt+2");
        BtnCari.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCariActionPerformed(evt);
            }
        });
        BtnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnCariKeyPressed(evt);
            }
        });
        panelGlass9.add(BtnCari);

        jPanel3.add(panelGlass9, java.awt.BorderLayout.PAGE_START);

        internalFrame1.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        PanelInput.setOpaque(false);
        PanelInput.setPreferredSize(new java.awt.Dimension(850, 210));
        PanelInput.setLayout(new java.awt.BorderLayout(1, 1));

        FormInput.setPreferredSize(new java.awt.Dimension(850, 137));
        FormInput.setLayout(null);

        jUsername.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jUsername.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jUsername.setText("Username :");
        FormInput.add(jUsername);
        jUsername.setBounds(30, 20, 60, 23);

        jAgama.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jAgama.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jAgama.setText("Agama :");
        FormInput.add(jAgama);
        jAgama.setBounds(350, 110, 50, 23);
        FormInput.add(TEmail);
        TEmail.setBounds(100, 140, 210, 23);
        FormInput.add(TAlamat);
        TAlamat.setBounds(410, 140, 210, 23);
        FormInput.add(TNamaLengkap);
        TNamaLengkap.setBounds(100, 80, 210, 23);

        jPassword.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jPassword.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPassword.setText("Password :");
        FormInput.add(jPassword);
        jPassword.setBounds(30, 50, 60, 23);

        jNamaLengkap.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jNamaLengkap.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jNamaLengkap.setText("Nama Lengkap :");
        FormInput.add(jNamaLengkap);
        jNamaLengkap.setBounds(10, 80, 80, 23);

        jNik.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jNik.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jNik.setText("NIK :");
        FormInput.add(jNik);
        jNik.setBounds(60, 110, 30, 23);

        jEmail.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jEmail.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jEmail.setText("Email :");
        FormInput.add(jEmail);
        jEmail.setBounds(50, 140, 40, 23);

        jTanggalLahir.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTanggalLahir.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jTanggalLahir.setText("Tanggal Lahir :");
        FormInput.add(jTanggalLahir);
        jTanggalLahir.setBounds(320, 20, 80, 23);

        jNoHp.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jNoHp.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jNoHp.setText("No. HP :");
        FormInput.add(jNoHp);
        jNoHp.setBounds(350, 80, 50, 23);
        FormInput.add(TNik);
        TNik.setBounds(100, 110, 210, 23);

        jJK.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jJK.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jJK.setText("Jenis Kelamin :");
        FormInput.add(jJK);
        jJK.setBounds(330, 50, 70, 23);

        jAlamat.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jAlamat.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jAlamat.setText("Alamat :");
        FormInput.add(jAlamat);
        jAlamat.setBounds(330, 140, 70, 23);
        FormInput.add(TUsername);
        TUsername.setBounds(100, 20, 210, 23);
        FormInput.add(TPassword);
        TPassword.setBounds(100, 50, 210, 23);
        FormInput.add(TNoHp);
        TNoHp.setBounds(410, 80, 210, 23);
        FormInput.add(TAgama);
        TAgama.setBounds(410, 110, 210, 23);

        tanggalLahir.setBorder(new com.formdev.flatlaf.ui.FlatMenuItemBorder());
        FormInput.add(tanggalLahir);
        tanggalLahir.setBounds(410, 20, 120, 23);

        CmbJk.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        CmbJk.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "lakilaki", "perempuan" }));
        CmbJk.setBorder(new com.formdev.flatlaf.ui.FlatTextBorder());
        CmbJk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmbJkActionPerformed(evt);
            }
        });
        FormInput.add(CmbJk);
        CmbJk.setBounds(410, 50, 120, 23);

        PanelInput.add(FormInput, java.awt.BorderLayout.CENTER);

        ChkInput.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/143.png"))); // NOI18N
        ChkInput.setMnemonic('I');
        ChkInput.setText(".: Input Data");
        ChkInput.setToolTipText("Alt+I");
        ChkInput.setBorderPainted(true);
        ChkInput.setBorderPaintedFlat(true);
        ChkInput.setFocusable(false);
        ChkInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ChkInput.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ChkInput.setPreferredSize(new java.awt.Dimension(192, 20));
        ChkInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkInputActionPerformed(evt);
            }
        });
        PanelInput.add(ChkInput, java.awt.BorderLayout.PAGE_END);

        internalFrame1.add(PanelInput, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbUnitKerjaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbUnitKerjaMouseClicked
        if(tabMode.getRowCount()!=0){
            try {
               getData();
            } catch (java.lang.NullPointerException e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_tbUnitKerjaMouseClicked

    private void tbUnitKerjaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbUnitKerjaKeyReleased
        if(tabMode.getRowCount()!=0){
            if((evt.getKeyCode()==KeyEvent.VK_ENTER)||(evt.getKeyCode()==KeyEvent.VK_UP)||(evt.getKeyCode()==KeyEvent.VK_DOWN)){
                try {
                    getData();
                } catch (java.lang.NullPointerException e) {
                    System.out.println(e);
                }
            }
        }
    }//GEN-LAST:event_tbUnitKerjaKeyReleased

    private void BtnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBatalActionPerformed
        ChkInput.setSelected(true);
        isForm();
        emptTeks();
    }//GEN-LAST:event_BtnBatalActionPerformed

    private void BtnBatalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnBatalKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            emptTeks();
        }
    }//GEN-LAST:event_BtnBatalKeyPressed

    private void BtnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPrintActionPerformed

    }//GEN-LAST:event_BtnPrintActionPerformed

    private void BtnPrintKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnPrintKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnPrintActionPerformed(null);
        }
    }//GEN-LAST:event_BtnPrintKeyPressed

    private void BtnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAllActionPerformed
        TCari.setText("");
        tampil("");
    }//GEN-LAST:event_BtnAllActionPerformed

    private void BtnAllKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnAllKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnAllActionPerformed(null);
        }
    }//GEN-LAST:event_BtnAllKeyPressed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            dispose();
        }
    }//GEN-LAST:event_BtnKeluarKeyPressed

    private void BtnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCariActionPerformed
        if(!TCari.getText().trim().equals("")){
            tampil(TCari.getText().trim());
        } else {
            tampil("");
        }
    }//GEN-LAST:event_BtnCariActionPerformed

    private void BtnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnCariActionPerformed(null);
        }
    }//GEN-LAST:event_BtnCariKeyPressed

    private void ChkInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkInputActionPerformed
        isForm();
    }//GEN-LAST:event_ChkInputActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void CmbJkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmbJkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CmbJkActionPerformed

    private void BtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        try {
            String URL = koneksi.HOST() + "/api/v1/users/" + iduser;
            System.out.println("Request ke: " + URL);

            // Ambil token dari Preferences
            Preferences prefs = Preferences.userRoot().node("myApp");
            String token = prefs.get("auth_token", null);

            if (token == null) {
                JOptionPane.showMessageDialog(null, "Token tidak ditemukan! Harap login terlebih dahulu.");
                return;
            }
            
            // Data Anggota
            Map<String, Object> requestData = new HashMap<>();
            requestData.put("username", TUsername.getText());
            requestData.put("password", TPassword.getText());
            requestData.put("nama_lengkap", TNamaLengkap.getText());
            requestData.put("nik", TNik.getText());
            requestData.put("email", TEmail.getText());
            requestData.put("phone", TNoHp.getText());
            requestData.put("alamat", TAlamat.getText());
            requestData.put("tanggal_lahir", new SimpleDateFormat("yyyy-MM-dd").format(this.tanggalLahir.getDate()));
            requestData.put("jenis_kelamin", CmbJk.getSelectedItem());
            requestData.put("agama", TAgama.getText());
            
            // Konversi Map ke JSON String
            ObjectMapper objectMapper = new ObjectMapper();
            String requestJsonAnggota = objectMapper.writeValueAsString(requestData);                

            // Menggunakan HttpClient
            HttpClient httpClient = HttpClient.newHttpClient();
            HttpRequest request = HttpRequest.newBuilder()
                    .uri(URI.create(URL))
                    .header("Content-Type", "application/json")
                    .header("Accept", "application/json")
                    .header("Authorization", "Bearer " + token)
                    .method("PATCH", HttpRequest.BodyPublishers.ofString(requestJsonAnggota))
                    .build();

            HttpResponse<String> response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());
            if (response.statusCode() == 200) {
                JsonNode root = objectMapper.readTree(response.body());
                JOptionPane.showMessageDialog(null, root.path("message").asText());
                tabMode.setRowCount(0);
                emptTeks();
                tampil(TCari.getText());
            } else {
                JsonNode root = objectMapper.readTree(response.body());
                JOptionPane.showMessageDialog(null, root.path("errors").asText());
            }
        } catch (JsonProcessingException e) {
            JOptionPane.showMessageDialog(null, "Kesalahan dalam pemrosesan data: " + e.getMessage());
            System.err.println("JSON Processing Error: " + e.getMessage());
        } catch (IOException | InterruptedException e) {
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat menghubungi server: " + e.getMessage());
            System.err.println("Error saat melakukan request: " + e.getMessage());
        } finally {
            this.setCursor(Cursor.getDefaultCursor());
        }
    }//GEN-LAST:event_BtnEditActionPerformed

    private void BtnEditKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnEditKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnEditActionPerformed(null);
        }
    }//GEN-LAST:event_BtnEditKeyPressed

    public void emptTeks() {
        TUsername.setText("");
        TEmail.setText("");
    }
    
    private void isForm(){
        if(ChkInput.isSelected()==true){
            ChkInput.setVisible(false);
            PanelInput.setPreferredSize(new Dimension(WIDTH,210));
            FormInput.setVisible(true);      
            ChkInput.setVisible(true);
        }else if(ChkInput.isSelected()==false){           
            ChkInput.setVisible(false);            
            PanelInput.setPreferredSize(new Dimension(WIDTH,20));
            FormInput.setVisible(false);      
            ChkInput.setVisible(true);
        }
    }
     
    private void getData() {
        int row=tbUnitKerja.getSelectedRow();
        if(row!= -1){
            iduser = tbUnitKerja.getValueAt(row,0).toString();
            TUsername.setText(tbUnitKerja.getValueAt(row,1).toString());
            TNamaLengkap.setText(tbUnitKerja.getValueAt(row,3).toString());
            TNik.setText(tbUnitKerja.getValueAt(row,4).toString());
            TEmail.setText(tbUnitKerja.getValueAt(row,5).toString());
            TNoHp.setText(tbUnitKerja.getValueAt(row,6).toString());
            TAlamat.setText(tbUnitKerja.getValueAt(row,7).toString());
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            try {
                // Konversi String ke Date
                Date lahirDate = dateFormat.parse(tbUnitKerja.getValueAt(row,8).toString());
                // Set nilai ke JXDatePicker
                tanggalLahir.setDate(lahirDate);
            } catch (ParseException e) {
                System.out.println("Format tanggal salah: " + e.getMessage());
            }
            CmbJk.setSelectedItem(tbUnitKerja.getValueAt(row,9).toString());
            TAgama.setText(tbUnitKerja.getValueAt(row,10).toString());
        }
    }
     
    private void tampil(String cari) {
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        try {
            String URL = koneksi.HOST() + "/api/v1/users?search=" + cari;
            System.out.println("Request ke: " + URL);
            
            // Ambil token dari Preferences
            Preferences prefs = Preferences.userRoot().node("myApp");
            String token = prefs.get("auth_token", null);

            if (token == null) {
                System.out.println("Token tidak ditemukan! Harap login terlebih dahulu.");
                return;
            }
            
            tabMode.setRowCount(0); // Hapus data lama

            // Header
            HttpHeaders headers = new HttpHeaders();
            headers.setContentType(MediaType.APPLICATION_JSON);
            headers.set("Accept", "application/json");
            headers.set("Authorization", "Bearer " + token); 
            
            // Request menggunakan RestTemplate
            RestTemplate restTemplate = new RestTemplate();
            HttpEntity<String> entity = new HttpEntity<>(headers);
            ResponseEntity<String> response = restTemplate.exchange(URL, HttpMethod.GET, entity, String.class);
            
            // Parsing JSON ke dalam tabel
            ObjectMapper objectMapper = new ObjectMapper();
            JsonNode rootNode = objectMapper.readTree(response.getBody());

            System.out.println(rootNode);
            
            JsonNode dataArray = rootNode.path("data");

            if (dataArray.isArray()) {
                for (JsonNode member : dataArray) {
                    String id = member.path("id").asText();
                    String nama = member.path("username").asText();
                    String role = member.path("role").asText();
                    String namalengkap = member.path("nama_lengkap").asText();
                    String nik = member.path("nik").asText();
                    String email = member.path("email").asText();
                    String phone = member.path("phone").asText();
                    String alamat = member.path("alamat").asText();
                    String tanggallahir = member.path("tanggal_lahir").asText();
                    String jeniskelamin = member.path("jenis_kelamin").asText();
                    String agama = member.path("agama").asText();

                    // Tambahkan data ke tabel
                    tabMode.addRow(new Object[]{id ,
                        nama.equals("null") ? "" : nama,
                        role.equals("null") ? "" : role,
                        namalengkap.equals("null") ? "" : namalengkap,
                        nik.equals("null") ? "" : nik,
                        email.equals("null") ? "" : email,
                        phone.equals("null") ? "" : phone,
                        alamat.equals("null") ? "" : alamat, 
                        tanggallahir.equals("null") ? "" : tanggallahir,
                        jeniskelamin.equals("null") ? "" : jeniskelamin,
                        agama.equals("null") ? "" : agama
                    });
                }
            }

        } catch (JsonProcessingException | RestClientException e) {
            System.out.println(e);
        } finally{
        }
        LCount.setText(""+tabMode.getRowCount());
        setCursor(Cursor.getDefaultCursor());
    }
    
    public void setUpdateData(String id, String username, String nama_lengkap, String nik, 
                          String email, String phone, String alamat, String tanggal_lahir, 
                          String jenis_kelamin, String agama) {
        // Mengatur nilai ke JTextField sesuai dengan parameter JSON
        iduser = id;
        TUsername.setText(username);
        TNamaLengkap.setText(nama_lengkap);
        TNik.setText(nik);
        TEmail.setText(email);
        TNoHp.setText(phone);
        TAlamat.setText(alamat);
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        // Menangani tanggal lahir jika null
        if (tanggal_lahir != null && !tanggal_lahir.isEmpty()) {
            try {
                Date date = dateFormat.parse(tanggal_lahir);
                tanggalLahir.setDate(date);
            } catch (ParseException e) {
                tanggalLahir.setDate(new Date()); // Jika error parsing, set null
            }
        } else {
            tanggalLahir.setDate(new Date());
        }
        CmbJk.setSelectedItem(jenis_kelamin);
        TAgama.setText(agama);
        // Menampilkan data setelah di-set
        tampil(username);
        TCari.setText(username);
        isForm();
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnAll;
    private widget.Button BtnBatal;
    private widget.Button BtnCari;
    private widget.Button BtnEdit;
    private widget.Button BtnKeluar;
    private widget.Button BtnPrint;
    private widget.CekBox ChkInput;
    private javax.swing.JComboBox<String> CmbJk;
    private widget.PanelBiasa FormInput;
    private widget.Label LCount;
    private javax.swing.JPanel PanelInput;
    private widget.ScrollPane Scroll;
    private javax.swing.JTextField TAgama;
    private javax.swing.JTextField TAlamat;
    private javax.swing.JTextField TCari;
    private javax.swing.JTextField TEmail;
    private javax.swing.JTextField TNamaLengkap;
    private javax.swing.JTextField TNik;
    private javax.swing.JTextField TNoHp;
    private javax.swing.JTextField TPassword;
    private javax.swing.JTextField TUsername;
    private widget.InternalFrame internalFrame1;
    private javax.swing.JLabel jAgama;
    private javax.swing.JLabel jAlamat;
    private javax.swing.JLabel jEmail;
    private javax.swing.JLabel jJK;
    private widget.Label jLabel10;
    private widget.Label jLabel6;
    private javax.swing.JLabel jNamaLengkap;
    private javax.swing.JLabel jNik;
    private javax.swing.JLabel jNoHp;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel jPassword;
    private javax.swing.JLabel jTanggalLahir;
    private javax.swing.JLabel jUsername;
    private widget.panelisi panelGlass8;
    private widget.panelisi panelGlass9;
    private widget.Tanggal tanggalLahir;
    private widget.Table tbUnitKerja;
    // End of variables declaration//GEN-END:variables
}
